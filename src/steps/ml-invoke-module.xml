<refentry xmlns:p="http://www.w3.org/ns/xproc"
          xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
          xmlns:pxp="http://exproc.org/proposed/steps"
          xmlns:pxf="http://exproc.org/proposed/steps/file"
          xmlns:ml="http://xmlcalabash.com/ns/extensions/marklogic"
          xmlns:cxu="http://xmlcalabash.com/ns/extensions/xmlunit"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:pos="http://exproc.org/proposed/steps/os"
          xml:id="ml-invoke-module">
   <refnamediv>
      <refname>ml:invoke-module</refname>
      <refpurpose>Invoke a module on MarkLogic Server</refpurpose>
   </refnamediv>
   <refsynopsisdiv>
      <xi:include href="../declarations.xml" xpointer="xpath(/*/*[@type='ml:invoke-module'])"/>
   </refsynopsisdiv>
   <refsection>
      <title>Description</title>

<para>The <tag>ml:invoke-module</tag> step invokes a module on a
<link xlink:href="http://www.marklogic.com">Mark Logic</link> Server,
as its name implies.
</para>

<para>Because the results of a module invocation may not be a single,
well formed XML document (for example, it could be a single atomic value),
the results are wrapped in the specified wrapper element.</para>
</refsection>

<refsection>
<title>Implementation</title>
<para>To use this step you must have
<link xlink:href="http://www.marklogic.com/">MarkLogic Server</link> and the
<link xlink:href="https://github.com/ndw/xmlcalabash1-xcc">xmlcalabash1-xcc</link>
module. The jar file from that project must be in the class path in order
to use this step.</para>
</refsection>

</refentry>
